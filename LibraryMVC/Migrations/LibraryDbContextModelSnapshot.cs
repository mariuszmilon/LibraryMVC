// <auto-generated />
using System;
using LibraryMVC.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryMVC.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LibraryMVC.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfPublication")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPages")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPiecesAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Translation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("LibraryMVC.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("NameOfCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NameOfCategory = "Action or Adventure"
                        },
                        new
                        {
                            Id = 2,
                            NameOfCategory = "Classics"
                        },
                        new
                        {
                            Id = 3,
                            NameOfCategory = "Comic Book or Graphic Novel"
                        },
                        new
                        {
                            Id = 4,
                            NameOfCategory = "Detective and Mystery"
                        },
                        new
                        {
                            Id = 5,
                            NameOfCategory = "Fantasy"
                        },
                        new
                        {
                            Id = 6,
                            NameOfCategory = "Historical Fiction"
                        },
                        new
                        {
                            Id = 7,
                            NameOfCategory = "Horror"
                        },
                        new
                        {
                            Id = 8,
                            NameOfCategory = "Literary Fiction"
                        },
                        new
                        {
                            Id = 9,
                            NameOfCategory = "Romance"
                        },
                        new
                        {
                            Id = 10,
                            NameOfCategory = "Science Fiction"
                        },
                        new
                        {
                            Id = 11,
                            NameOfCategory = "Suspense or Thrillers"
                        },
                        new
                        {
                            Id = 12,
                            NameOfCategory = "Biographies or Autobiographies"
                        },
                        new
                        {
                            Id = 13,
                            NameOfCategory = "Cookbooks"
                        },
                        new
                        {
                            Id = 14,
                            NameOfCategory = "History"
                        },
                        new
                        {
                            Id = 15,
                            NameOfCategory = "Memoir"
                        },
                        new
                        {
                            Id = 17,
                            NameOfCategory = "Self-Help"
                        },
                        new
                        {
                            Id = 18,
                            NameOfCategory = "True Crime"
                        });
                });

            modelBuilder.Entity("LibraryMVC.Entities.Book", b =>
                {
                    b.HasOne("LibraryMVC.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryMVC.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
